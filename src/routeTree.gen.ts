/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppWatchlistImport } from './routes/_app/watchlist'
import { Route as AppProfileImport } from './routes/_app/profile'
import { Route as AppMoviesImport } from './routes/_app/movies'
import { Route as AppHistoryImport } from './routes/_app/history'
import { Route as AppContactImport } from './routes/_app/contact'
import { Route as AppAboutImport } from './routes/_app/about'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppWatchlistRoute = AppWatchlistImport.update({
  id: '/watchlist',
  path: '/watchlist',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProfileRoute = AppProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppMoviesRoute = AppMoviesImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppHistoryRoute = AppHistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppContactRoute = AppContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/contact': {
      id: '/_app/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof AppContactImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/history': {
      id: '/_app/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof AppHistoryImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/movies': {
      id: '/_app/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof AppMoviesImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/watchlist': {
      id: '/_app/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof AppWatchlistImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppAboutRoute: typeof AppAboutRoute
  AppContactRoute: typeof AppContactRoute
  AppHistoryRoute: typeof AppHistoryRoute
  AppMoviesRoute: typeof AppMoviesRoute
  AppProfileRoute: typeof AppProfileRoute
  AppWatchlistRoute: typeof AppWatchlistRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppContactRoute: AppContactRoute,
  AppHistoryRoute: AppHistoryRoute,
  AppMoviesRoute: AppMoviesRoute,
  AppProfileRoute: AppProfileRoute,
  AppWatchlistRoute: AppWatchlistRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/about': typeof AppAboutRoute
  '/contact': typeof AppContactRoute
  '/history': typeof AppHistoryRoute
  '/movies': typeof AppMoviesRoute
  '/profile': typeof AppProfileRoute
  '/watchlist': typeof AppWatchlistRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AppAboutRoute
  '/contact': typeof AppContactRoute
  '/history': typeof AppHistoryRoute
  '/movies': typeof AppMoviesRoute
  '/profile': typeof AppProfileRoute
  '/watchlist': typeof AppWatchlistRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/about': typeof AppAboutRoute
  '/_app/contact': typeof AppContactRoute
  '/_app/history': typeof AppHistoryRoute
  '/_app/movies': typeof AppMoviesRoute
  '/_app/profile': typeof AppProfileRoute
  '/_app/watchlist': typeof AppWatchlistRoute
  '/_app/': typeof AppIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/contact'
    | '/history'
    | '/movies'
    | '/profile'
    | '/watchlist'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/contact'
    | '/history'
    | '/movies'
    | '/profile'
    | '/watchlist'
    | '/'
  id:
    | '__root__'
    | '/_app'
    | '/_app/about'
    | '/_app/contact'
    | '/_app/history'
    | '/_app/movies'
    | '/_app/profile'
    | '/_app/watchlist'
    | '/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/about",
        "/_app/contact",
        "/_app/history",
        "/_app/movies",
        "/_app/profile",
        "/_app/watchlist",
        "/_app/"
      ]
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/contact": {
      "filePath": "_app/contact.tsx",
      "parent": "/_app"
    },
    "/_app/history": {
      "filePath": "_app/history.tsx",
      "parent": "/_app"
    },
    "/_app/movies": {
      "filePath": "_app/movies.tsx",
      "parent": "/_app"
    },
    "/_app/profile": {
      "filePath": "_app/profile.tsx",
      "parent": "/_app"
    },
    "/_app/watchlist": {
      "filePath": "_app/watchlist.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
