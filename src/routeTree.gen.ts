/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppSearchImport } from './routes/_app/search'
import { Route as AppMoviesImport } from './routes/_app/movies'
import { Route as AppExploreImport } from './routes/_app/explore'
import { Route as AppContactImport } from './routes/_app/contact'
import { Route as AppAboutImport } from './routes/_app/about'
import { Route as AppIsAuthenticatedRouteImport } from './routes/_app/_isAuthenticated/route'
import { Route as AppIndexRouteImport } from './routes/_app/index/route'
import { Route as AppWatchIdImport } from './routes/_app/watch/$id'
import { Route as AppIsAuthenticatedWatchlistImport } from './routes/_app/_isAuthenticated/watchlist'
import { Route as AppIsAuthenticatedSettingsImport } from './routes/_app/_isAuthenticated/settings'
import { Route as AppIsAuthenticatedProfileImport } from './routes/_app/_isAuthenticated/profile'
import { Route as AppIsAuthenticatedHistoryImport } from './routes/_app/_isAuthenticated/history'
import { Route as AppIsAuthenticatedIsAdminRouteImport } from './routes/_app/_isAuthenticated/_isAdmin/route'
import { Route as AppIsAuthenticatedIsAdminAddImport } from './routes/_app/_isAuthenticated/_isAdmin/add'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppSearchRoute = AppSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppMoviesRoute = AppMoviesImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppExploreRoute = AppExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppContactRoute = AppContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppIsAuthenticatedRouteRoute = AppIsAuthenticatedRouteImport.update({
  id: '/_isAuthenticated',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppIndexRouteRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppWatchIdRoute = AppWatchIdImport.update({
  id: '/watch/$id',
  path: '/watch/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppIsAuthenticatedWatchlistRoute =
  AppIsAuthenticatedWatchlistImport.update({
    id: '/watchlist',
    path: '/watchlist',
    getParentRoute: () => AppIsAuthenticatedRouteRoute,
  } as any)

const AppIsAuthenticatedSettingsRoute = AppIsAuthenticatedSettingsImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AppIsAuthenticatedRouteRoute,
  } as any,
)

const AppIsAuthenticatedProfileRoute = AppIsAuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppIsAuthenticatedRouteRoute,
} as any)

const AppIsAuthenticatedHistoryRoute = AppIsAuthenticatedHistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => AppIsAuthenticatedRouteRoute,
} as any)

const AppIsAuthenticatedIsAdminRouteRoute =
  AppIsAuthenticatedIsAdminRouteImport.update({
    id: '/_isAdmin',
    getParentRoute: () => AppIsAuthenticatedRouteRoute,
  } as any)

const AppIsAuthenticatedIsAdminAddRoute =
  AppIsAuthenticatedIsAdminAddImport.update({
    id: '/add',
    path: '/add',
    getParentRoute: () => AppIsAuthenticatedIsAdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_isAuthenticated': {
      id: '/_app/_isAuthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppIsAuthenticatedRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/contact': {
      id: '/_app/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof AppContactImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/explore': {
      id: '/_app/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof AppExploreImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/movies': {
      id: '/_app/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof AppMoviesImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/search': {
      id: '/_app/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AppSearchImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_isAuthenticated/_isAdmin': {
      id: '/_app/_isAuthenticated/_isAdmin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppIsAuthenticatedIsAdminRouteImport
      parentRoute: typeof AppIsAuthenticatedRouteImport
    }
    '/_app/_isAuthenticated/history': {
      id: '/_app/_isAuthenticated/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof AppIsAuthenticatedHistoryImport
      parentRoute: typeof AppIsAuthenticatedRouteImport
    }
    '/_app/_isAuthenticated/profile': {
      id: '/_app/_isAuthenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppIsAuthenticatedProfileImport
      parentRoute: typeof AppIsAuthenticatedRouteImport
    }
    '/_app/_isAuthenticated/settings': {
      id: '/_app/_isAuthenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppIsAuthenticatedSettingsImport
      parentRoute: typeof AppIsAuthenticatedRouteImport
    }
    '/_app/_isAuthenticated/watchlist': {
      id: '/_app/_isAuthenticated/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof AppIsAuthenticatedWatchlistImport
      parentRoute: typeof AppIsAuthenticatedRouteImport
    }
    '/_app/watch/$id': {
      id: '/_app/watch/$id'
      path: '/watch/$id'
      fullPath: '/watch/$id'
      preLoaderRoute: typeof AppWatchIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_isAuthenticated/_isAdmin/add': {
      id: '/_app/_isAuthenticated/_isAdmin/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AppIsAuthenticatedIsAdminAddImport
      parentRoute: typeof AppIsAuthenticatedIsAdminRouteImport
    }
  }
}

// Create and export the route tree

interface AppIsAuthenticatedIsAdminRouteRouteChildren {
  AppIsAuthenticatedIsAdminAddRoute: typeof AppIsAuthenticatedIsAdminAddRoute
}

const AppIsAuthenticatedIsAdminRouteRouteChildren: AppIsAuthenticatedIsAdminRouteRouteChildren =
  {
    AppIsAuthenticatedIsAdminAddRoute: AppIsAuthenticatedIsAdminAddRoute,
  }

const AppIsAuthenticatedIsAdminRouteRouteWithChildren =
  AppIsAuthenticatedIsAdminRouteRoute._addFileChildren(
    AppIsAuthenticatedIsAdminRouteRouteChildren,
  )

interface AppIsAuthenticatedRouteRouteChildren {
  AppIsAuthenticatedIsAdminRouteRoute: typeof AppIsAuthenticatedIsAdminRouteRouteWithChildren
  AppIsAuthenticatedHistoryRoute: typeof AppIsAuthenticatedHistoryRoute
  AppIsAuthenticatedProfileRoute: typeof AppIsAuthenticatedProfileRoute
  AppIsAuthenticatedSettingsRoute: typeof AppIsAuthenticatedSettingsRoute
  AppIsAuthenticatedWatchlistRoute: typeof AppIsAuthenticatedWatchlistRoute
}

const AppIsAuthenticatedRouteRouteChildren: AppIsAuthenticatedRouteRouteChildren =
  {
    AppIsAuthenticatedIsAdminRouteRoute:
      AppIsAuthenticatedIsAdminRouteRouteWithChildren,
    AppIsAuthenticatedHistoryRoute: AppIsAuthenticatedHistoryRoute,
    AppIsAuthenticatedProfileRoute: AppIsAuthenticatedProfileRoute,
    AppIsAuthenticatedSettingsRoute: AppIsAuthenticatedSettingsRoute,
    AppIsAuthenticatedWatchlistRoute: AppIsAuthenticatedWatchlistRoute,
  }

const AppIsAuthenticatedRouteRouteWithChildren =
  AppIsAuthenticatedRouteRoute._addFileChildren(
    AppIsAuthenticatedRouteRouteChildren,
  )

interface AppRouteRouteChildren {
  AppIndexRouteRoute: typeof AppIndexRouteRoute
  AppIsAuthenticatedRouteRoute: typeof AppIsAuthenticatedRouteRouteWithChildren
  AppAboutRoute: typeof AppAboutRoute
  AppContactRoute: typeof AppContactRoute
  AppExploreRoute: typeof AppExploreRoute
  AppMoviesRoute: typeof AppMoviesRoute
  AppSearchRoute: typeof AppSearchRoute
  AppWatchIdRoute: typeof AppWatchIdRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRouteRoute: AppIndexRouteRoute,
  AppIsAuthenticatedRouteRoute: AppIsAuthenticatedRouteRouteWithChildren,
  AppAboutRoute: AppAboutRoute,
  AppContactRoute: AppContactRoute,
  AppExploreRoute: AppExploreRoute,
  AppMoviesRoute: AppMoviesRoute,
  AppSearchRoute: AppSearchRoute,
  AppWatchIdRoute: AppWatchIdRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppIsAuthenticatedIsAdminRouteRouteWithChildren
  '/': typeof AppIndexRouteRoute
  '/about': typeof AppAboutRoute
  '/contact': typeof AppContactRoute
  '/explore': typeof AppExploreRoute
  '/movies': typeof AppMoviesRoute
  '/search': typeof AppSearchRoute
  '/history': typeof AppIsAuthenticatedHistoryRoute
  '/profile': typeof AppIsAuthenticatedProfileRoute
  '/settings': typeof AppIsAuthenticatedSettingsRoute
  '/watchlist': typeof AppIsAuthenticatedWatchlistRoute
  '/watch/$id': typeof AppWatchIdRoute
  '/add': typeof AppIsAuthenticatedIsAdminAddRoute
}

export interface FileRoutesByTo {
  '/': typeof AppIndexRouteRoute
  '': typeof AppIsAuthenticatedIsAdminRouteRouteWithChildren
  '/about': typeof AppAboutRoute
  '/contact': typeof AppContactRoute
  '/explore': typeof AppExploreRoute
  '/movies': typeof AppMoviesRoute
  '/search': typeof AppSearchRoute
  '/history': typeof AppIsAuthenticatedHistoryRoute
  '/profile': typeof AppIsAuthenticatedProfileRoute
  '/settings': typeof AppIsAuthenticatedSettingsRoute
  '/watchlist': typeof AppIsAuthenticatedWatchlistRoute
  '/watch/$id': typeof AppWatchIdRoute
  '/add': typeof AppIsAuthenticatedIsAdminAddRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/': typeof AppIndexRouteRoute
  '/_app/_isAuthenticated': typeof AppIsAuthenticatedRouteRouteWithChildren
  '/_app/about': typeof AppAboutRoute
  '/_app/contact': typeof AppContactRoute
  '/_app/explore': typeof AppExploreRoute
  '/_app/movies': typeof AppMoviesRoute
  '/_app/search': typeof AppSearchRoute
  '/_app/_isAuthenticated/_isAdmin': typeof AppIsAuthenticatedIsAdminRouteRouteWithChildren
  '/_app/_isAuthenticated/history': typeof AppIsAuthenticatedHistoryRoute
  '/_app/_isAuthenticated/profile': typeof AppIsAuthenticatedProfileRoute
  '/_app/_isAuthenticated/settings': typeof AppIsAuthenticatedSettingsRoute
  '/_app/_isAuthenticated/watchlist': typeof AppIsAuthenticatedWatchlistRoute
  '/_app/watch/$id': typeof AppWatchIdRoute
  '/_app/_isAuthenticated/_isAdmin/add': typeof AppIsAuthenticatedIsAdminAddRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/about'
    | '/contact'
    | '/explore'
    | '/movies'
    | '/search'
    | '/history'
    | '/profile'
    | '/settings'
    | '/watchlist'
    | '/watch/$id'
    | '/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/contact'
    | '/explore'
    | '/movies'
    | '/search'
    | '/history'
    | '/profile'
    | '/settings'
    | '/watchlist'
    | '/watch/$id'
    | '/add'
  id:
    | '__root__'
    | '/_app'
    | '/_app/'
    | '/_app/_isAuthenticated'
    | '/_app/about'
    | '/_app/contact'
    | '/_app/explore'
    | '/_app/movies'
    | '/_app/search'
    | '/_app/_isAuthenticated/_isAdmin'
    | '/_app/_isAuthenticated/history'
    | '/_app/_isAuthenticated/profile'
    | '/_app/_isAuthenticated/settings'
    | '/_app/_isAuthenticated/watchlist'
    | '/_app/watch/$id'
    | '/_app/_isAuthenticated/_isAdmin/add'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/",
        "/_app/_isAuthenticated",
        "/_app/about",
        "/_app/contact",
        "/_app/explore",
        "/_app/movies",
        "/_app/search",
        "/_app/watch/$id"
      ]
    },
    "/_app/": {
      "filePath": "_app/index/route.tsx",
      "parent": "/_app"
    },
    "/_app/_isAuthenticated": {
      "filePath": "_app/_isAuthenticated/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_isAuthenticated/_isAdmin",
        "/_app/_isAuthenticated/history",
        "/_app/_isAuthenticated/profile",
        "/_app/_isAuthenticated/settings",
        "/_app/_isAuthenticated/watchlist"
      ]
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/contact": {
      "filePath": "_app/contact.tsx",
      "parent": "/_app"
    },
    "/_app/explore": {
      "filePath": "_app/explore.tsx",
      "parent": "/_app"
    },
    "/_app/movies": {
      "filePath": "_app/movies.tsx",
      "parent": "/_app"
    },
    "/_app/search": {
      "filePath": "_app/search.tsx",
      "parent": "/_app"
    },
    "/_app/_isAuthenticated/_isAdmin": {
      "filePath": "_app/_isAuthenticated/_isAdmin/route.tsx",
      "parent": "/_app/_isAuthenticated",
      "children": [
        "/_app/_isAuthenticated/_isAdmin/add"
      ]
    },
    "/_app/_isAuthenticated/history": {
      "filePath": "_app/_isAuthenticated/history.tsx",
      "parent": "/_app/_isAuthenticated"
    },
    "/_app/_isAuthenticated/profile": {
      "filePath": "_app/_isAuthenticated/profile.tsx",
      "parent": "/_app/_isAuthenticated"
    },
    "/_app/_isAuthenticated/settings": {
      "filePath": "_app/_isAuthenticated/settings.tsx",
      "parent": "/_app/_isAuthenticated"
    },
    "/_app/_isAuthenticated/watchlist": {
      "filePath": "_app/_isAuthenticated/watchlist.tsx",
      "parent": "/_app/_isAuthenticated"
    },
    "/_app/watch/$id": {
      "filePath": "_app/watch/$id.tsx",
      "parent": "/_app"
    },
    "/_app/_isAuthenticated/_isAdmin/add": {
      "filePath": "_app/_isAuthenticated/_isAdmin/add.tsx",
      "parent": "/_app/_isAuthenticated/_isAdmin"
    }
  }
}
ROUTE_MANIFEST_END */
